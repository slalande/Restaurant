<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:s="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	https://www.springframework.org/schema/beans/spring-beans.xsd 
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.1.xsd
	http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<!-- Root Context: pour le backend : defines shared resources visible to 
		all other web components -->
	<!-- activer la detection des annotations ex : @Autowired -->
	<context:annotation-config />

	<!-- activer l'auto scan des composants (beans) : dans quel package il faut 
		charcher composants àinstancier -->
	<context:component-scan
		base-package="com.adaming.myapp" />

	<context:property-placeholder
		location="/WEB-INF/jdbc.properties" />

	<bean id="datasourceBean"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">

		<property name="driverClassName"
			value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />

	</bean>

	<!-- bean de la session factory -->
	<bean id="sessionFactoryBean"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">

		<!-- injection du datasource -->
		<property name="dataSource" ref="datasourceBean" />

		<!-- les classes annotées -->
		<property name="annotatedClasses">
			<value>
				com.adaming.myapp.Entity.Matiere,
				com.adaming.myapp.Entity.Etudiant,
				com.adaming.myapp.Entity.User,
				com.adaming.myapp.Entity.Role
			</value>

		</property>

		<!-- proprietes d'hibernate -->
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${jdbc.hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${jdbc.hibernate.show_sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${jdbc.hibernate.hbm2ddl.auto}</prop>
			</props>
		</property>
	</bean>

	<!-- detection des annotations des transactions : @Transactional : créée 
		les transactions, gère l'ORM -->
	<tx:annotation-driven
		transaction-manager="transactionManagerBean" />


	<!-- bean du transaction manager : gestion des transactions -->
	<bean id="transactionManagerBean"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">

		<!-- injection de la session factory -->
		<property name="sessionFactory" ref="sessionFactoryBean" />

	</bean>
	
<!-- 	<s:http auto-config="true" use-expressions="true"> -->
<!-- 	<s:intercept-url pattern="/Etudiant/All" access="hasRole('ROLE_ADMIN')" ></s:intercept-url> -->
<!-- 	<s:intercept-url pattern="/Etudiant/Ajout" access="hasRole('ROLE_ADMIN')" ></s:intercept-url> -->
<!-- 	<s:intercept-url pattern="/Etudiant/Supprimer" access="hasRole('ROLE_ADMIN')" ></s:intercept-url> -->
<!-- 	<s:intercept-url pattern="/Etudiant" access="hasRole('ROLE_ADMIN')" ></s:intercept-url> -->
<!-- 	<s:intercept-url pattern="/Matiere/All" access="hasRole('ROLE_ADMIN')" ></s:intercept-url> -->
<!-- 	<s:intercept-url pattern="/Matiere/Ajout" access="hasRole('ROLE_ADMIN')" ></s:intercept-url> -->
<!-- 	<s:intercept-url pattern="/Matiere/Supprimer" access="hasRole('ROLE_ADMIN')" ></s:intercept-url> -->
<!-- 	<s:form-login login-page="/login" default-target-url="/index" authentication-failure-url="/erreur"/> -->
<!-- 	<s:logout logout-success-url="/login"/> -->
<!-- 	</s:http> -->
<!-- 	<s:authentication-manager> -->
<!-- 	<s:authentication-provider> -->
<!-- 	<s:jdbc-user-service data-source-ref="datasourceBean" authorities-by-username-query="select u.username, r.rolename from -->
<!-- users u, roles r where u.iduser = r.iduser and u.username =? " users-by-username-query="select username,password, -->
<!-- activated from users where username=?"/> -->
<!-- 	<s:user-service> -->
<!-- 	<s:user name="admin" password="admin" authorities="ROLE_ADMIN"/> -->
<!-- 	<s:user name="admin2" password="admin2" authorities="ROLE_ADMIN"/> -->
<!-- 	</s:user-service> -->
<!-- 	</s:authentication-provider> -->
<!-- 	</s:authentication-manager> -->


</beans>
